from pystyle import Write, Colors
from colorama import Fore, init
import requests
import time
import os
import subprocess
import sys
import tempfile
import shutil
import random
import easygui

sys.dont_write_bytecode = True

init()

commands = {
    "1": "grabberext",
    "2": "zonexsec",
    "3": "dork",
    "4": "subdo",
    "5": "remover",
    "6": "rmsub",
    "7": "revip",
    "8": "shellfinder",
    "9": "wpscshell",
    "10": "joomlaexp",
    "11": "exploitshell",
    "12": "remoteshell",
    "13": "alfaprl",
    "14": "laravelexp",
    "15": "phpunit-brute",
    "16": "cpcracker",
    "17": "crackshellpw",
    "18": "ftpcrack",
    "19": "DAPA-Checker",
    "20": "CPcheck",
    "21": "update",
    "exit": sys.exit,

}


def banner():
    banner_text = """
$$\     $$\ $$\   $$\ $$$$$$$$\  $$$$$$\        $$$$$$$$\ $$\   $$\ $$$$$$$\  $$\       $$$$$$\  $$$$$$\ $$$$$$$$\ 
\$$\   $$  |$$ |  $$ |\__$$  __|$$  __$$\       $$  _____|$$ |  $$ |$$  __$$\ $$ |     $$  __$$\ \_$$  _|\__$$  __|
 \$$\ $$  / $$ |  $$ |   $$ |   $$ /  $$ |      $$ |      \$$\ $$  |$$ |  $$ |$$ |     $$ /  $$ |  $$ |     $$ |   
  \$$$$  /  $$ |  $$ |   $$ |   $$$$$$$$ |      $$$$$\     \$$$$  / $$$$$$$  |$$ |     $$ |  $$ |  $$ |     $$ |   
   \$$  /   $$ |  $$ |   $$ |   $$  __$$ |      $$  __|    $$  $$<  $$  ____/ $$ |     $$ |  $$ |  $$ |     $$ |   
    $$ |    $$ |  $$ |   $$ |   $$ |  $$ |      $$ |      $$  /\$$\ $$ |      $$ |     $$ |  $$ |  $$ |     $$ |   
    $$ |    \$$$$$$  |   $$ |   $$ |  $$ |      $$$$$$$$\ $$ /  $$ |$$ |      $$$$$$$$\ $$$$$$  |$$$$$$\    $$ |   
    \__|     \______/    \__|   \__|  \__|      \________|\__|  \__|\__|      \________|\______/ \______|   \__|   
                                                                                                                   
                                                                                                                   
                                                                                                                   
                                                                                               

Priv8Bot-AutoExploit Get Shell Backdoor Threading System
Contact For More Information.


Telegram : https://t.me/cahayaa878

                                                                                                      
"""
    print(Fore.MAGENTA + banner_text)


def update():
    temp_dir = tempfile.mkdtemp()
    shutil.copy("commands/update.py", temp_dir)
    print(temp_dir)
    subprocess.run(f"start cmd /k python {temp_dir}/update.py", shell=True)
    sys.exit(0)


def main():
    response = requests.get(
        "https://raw.githubusercontent.com/dropalways/netcry-nuker/main/version.txt")  # get latest version
    with open("version.txt", "r") as file:
        localversion = file.readline().strip()  # save local version as variable
    if localversion < response.text:  # compare local version to latest version
        rng = random.randint(1, 10)
        if rng == 7:  # 1/10 chance of displaying this message
            result = easygui.buttonbox(
                f"Current version({localversion}) isn't up to date with the latest release({response.text}). Do you want to install the latest version?",
                title="Netcryz", choices=["OK", "No"])
            # root = tk.Tk()
            # root.title("Netcryz")
            # root.geometry("0x0")
            # root.iconify()
            # update_question = messagebox.askyesno("Netcryz", f"Current version({localversion}) isn't up to date with latest release({response.text}) Do you want to install the latest version?", icon='warning')
            # if update_question:
            #     update()
            #     root.destroy()
            # else:
            #     root.destroy()
            # root.mainloop()
            if result == "OK":
                update()
            else:
                pass
    os.system('clear' if os.name != 'nt' else 'cls')
    os.system(f"title TAURUSTOOLS (VIP)")
    with open("token.txt", "r") as file:
        token = file.readline().strip()
  

    headers = {'Authorization': f'Bot {token}'}
    response = requests.get(
        "https://discord.com/api/v9/users/@me", headers=headers)

    if response.status_code == 200:
        data = response.json()
        user_id = data['id']

        os.system('clear' if os.name != 'nt' else 'cls')
        banner()
        print(Fore.LIGHTMAGENTA_EX + options)
    else:
        options2 = f"""{Fore.LIGHTMAGENTA_EX}┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓
┃       {Colors.gray}[ MENU GRABBING ]{Fore.LIGHTMAGENTA_EX}         ┃    {Colors.gray}[ MENU EXPLOIT/SCANNER ]{Fore.LIGHTMAGENTA_EX}     ┃     {Colors.gray}[ MENU CRACKED/CHECKER ]{Fore.LIGHTMAGENTA_EX}    ┃
┣━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╋━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╋━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┫
┃  [{Colors.gray}01{Fore.LIGHTMAGENTA_EX}] {Colors.gray}Grabber by Extension{Fore.LIGHTMAGENTA_EX}      ┃  [{Colors.gray}08{Fore.LIGHTMAGENTA_EX}] {Colors.gray}ShellFinder Path 23k++{Fore.LIGHTMAGENTA_EX}    ┃  [{Colors.gray}16{Fore.LIGHTMAGENTA_EX}] {Colors.gray}Cracked Cpanel & Whm{Fore.LIGHTMAGENTA_EX}      ┃
┃  [{Colors.gray}02{Fore.LIGHTMAGENTA_EX}] {Colors.gray}Grabber Zonexsec{Fore.LIGHTMAGENTA_EX}          ┃  [{Colors.gray}09{Fore.LIGHTMAGENTA_EX}] {Colors.gray}Wordpress Scanshell ETC..{Fore.LIGHTMAGENTA_EX} ┃  [{Colors.gray}17{Fore.LIGHTMAGENTA_EX}] {Colors.gray}Cracked Webshellpass{Fore.LIGHTMAGENTA_EX}      ┃
┃  [{Colors.gray}03{Fore.LIGHTMAGENTA_EX}] {Colors.gray}Dorking Google{Fore.LIGHTMAGENTA_EX}            ┃  [{Colors.gray}10{Fore.LIGHTMAGENTA_EX}] {Colors.gray}Joomla Scanshell ETC..{Fore.LIGHTMAGENTA_EX}    ┃  [{Colors.gray}18{Fore.LIGHTMAGENTA_EX}] {Colors.gray}Cracked FTP SSH        {Fore.LIGHTMAGENTA_EX}   ┃
┃  [{Colors.gray}04{Fore.LIGHTMAGENTA_EX}] {Colors.gray}Private Subdofinder{Fore.LIGHTMAGENTA_EX}       ┃  [{Colors.gray}11{Fore.LIGHTMAGENTA_EX}] {Colors.gray}Exploits Auto UP shells{Fore.LIGHTMAGENTA_EX}   ┃  [{Colors.gray}19{Fore.LIGHTMAGENTA_EX}] {Colors.gray}Mass DA/PA Checker{Fore.LIGHTMAGENTA_EX}        ┃
┃  [{Colors.gray}05{Fore.LIGHTMAGENTA_EX}] {Colors.gray}Remove Duplicat{Fore.LIGHTMAGENTA_EX}           ┃  [{Colors.gray}12{Fore.LIGHTMAGENTA_EX}] {Colors.gray}Private Remote shells{Fore.LIGHTMAGENTA_EX}     ┃  [{Colors.gray}20{Fore.LIGHTMAGENTA_EX}] {Colors.gray}Mass Checker Valid Cpanel{Fore.LIGHTMAGENTA_EX} ┃
┃  [{Colors.gray}06{Fore.LIGHTMAGENTA_EX}] {Colors.gray}Remove Subdomin{Fore.LIGHTMAGENTA_EX}           ┃  [{Colors.gray}13{Fore.LIGHTMAGENTA_EX}] {Colors.gray}Perl.Alfa Exploits{Fore.LIGHTMAGENTA_EX}        ┃   {Colors.gray}{Fore.LIGHTMAGENTA_EX}  {Colors.gray}             {Fore.LIGHTMAGENTA_EX}               ┃
┃  [{Colors.gray}07{Fore.LIGHTMAGENTA_EX}] {Colors.gray}Private ReverseIP {Fore.LIGHTMAGENTA_EX}        ┃  [{Colors.gray}14{Fore.LIGHTMAGENTA_EX}] {Colors.gray}Laravel Exploits .ENV {Fore.LIGHTMAGENTA_EX}    ┃  {Colors.gray} {Fore.LIGHTMAGENTA_EX}                           {Fore.LIGHTMAGENTA_EX}   ┃
┃   {Colors.gray}{Fore.LIGHTMAGENTA_EX} {Colors.gray}                    {Fore.LIGHTMAGENTA_EX}         ┃  [{Colors.gray}15{Fore.LIGHTMAGENTA_EX}] {Colors.gray}RCE phpunit Exploits{Fore.LIGHTMAGENTA_EX}      ┃  {Colors.gray} {Fore.LIGHTMAGENTA_EX}                           {Fore.LIGHTMAGENTA_EX}   ┃
┃   {Colors.gray}{Fore.LIGHTMAGENTA_EX} {Colors.gray}        {Fore.LIGHTMAGENTA_EX}                     ┃  {Colors.gray}{Fore.LIGHTMAGENTA_EX} {Colors.gray}                   {Fore.LIGHTMAGENTA_EX}           ┃  {Colors.gray} {Fore.LIGHTMAGENTA_EX}                           {Fore.LIGHTMAGENTA_EX}   ┃
┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┻━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┻━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛"""
        banner()
        print(options2)

    while True:
        try:
            user_input = Write.Input(f"\n\nroot""@yutasato━>>> ", Colors.gray, interval=0.03)

        except KeyboardInterrupt:
            sys.exit()

        user_input = user_input.lower()

        if user_input in commands:
            if user_input == "exit":
                commands[user_input]()
            elif user_input == "update":
                update()
            else:
                try:
                    os.system('clear' if os.name != 'nt' else 'cls')
                    subprocess.run(["python", str(f"commands/{commands.get(user_input)}.py")])
                    time.sleep(0.7)
                    main()
                except KeyboardInterrupt:
                    sys.exit()
        elif user_input == "":
            print("Error: Enter something")
            time.sleep(0.7)
            main()
        elif user_input == "reload":
            main()
        else:
            print(Fore.RED + "Error 404: Command not found")
            time.sleep(0.7)
            main()


if __name__ == "__main__":
    main()
